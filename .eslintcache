[{"C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\index.js":"1","C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\reportWebVitals.js":"2","C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\App.js":"3","C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\index.js":"4","C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\App.js":"5","C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\reportWebVitals.js":"6","C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\main.js":"7"},{"size":543,"mtime":1611883870232,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1077,"mtime":1612252903099,"results":"11","hashOfConfig":"9"},{"size":543,"mtime":1611883870232,"results":"12","hashOfConfig":"13"},{"size":3546,"mtime":1612693663442,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1317,"mtime":1612693333966,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1xrts06",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"g7qrdu",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\index.js",[],["35","36"],"C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\reportWebVitals.js",[],"C:\\Users\\jjrab\\Desktop\\projects\\eth-todo-list\\src\\App.js",["37"],"C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\index.js",[],["38","39"],"C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\App.js",["40"],"\nimport './App.css';\nimport React, {Component} from 'react';\nimport Web3 from 'web3';\nimport TodoList from './src/build/contracts/TodoList.json'\nimport Main from './main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n\t\t  await this.loadWeb3()\n\t\t  await this.loadBlockChainData()\n\t  }\n  async loadWeb3() {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.enable()\n    }\n      else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider)\n    }\n      else{\n        window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n    }\n\n  async loadBlockChainData(){\n    const web3 = window.web3\n\n\t  //load accounts\n\t  const accounts = await web3.eth.getAccounts()\n\t  this.setState({account: accounts[0]})\n\n    //Get Network ID\n\t  const networkId = await web3.eth.net.getId()\n\t  const networkData = TodoList.networks[networkId]\n\t  if(networkData){\n\t\t  //load smart contrcat proper\n\t\t const todoList = new web3.eth.Contract(TodoList.abi, networkData.address)\n\t\t  //set TodoList state\n\t\t  this.setState({todoList: todoList})\n\n      const taskCount = await todoList.methods.taskCount().call()\n      this.setState({taskCount})\n\n      //list out TaskList\n      for(var i = 1; i <= taskCount; i++){\n        const task = await todoList.methods.tasks(i).call()\n        this.setState({\n          tasks: [...this.state.tasks, task]\n        })\n        console.log(\"tasks: \", this.state.tasks)\n      }\n} else{\n   window.alert('contract was not deployed to test network.')\n }\n\n this.setState({loading:  false})\n\n}\n\ncreateTask(content) {\n  this.setState({ loading: true })\n  this.state.todoList.methods.createTask(content).send({ from: this.state.account })\n  .once('receipt', (receipt) => {\n    this.setState({ loading: false })\n  })\n}\n\ncheckboxClicked(taskId) {\n    this.setState({ loading: true })\n    this.state.todoList.methods.checkboxClicked(taskId).send({ from: this.state.account })\n    .once('receipt', (receipt) => {\n      this.setState({ loading: false })\n    })\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      todoList: null,\n      taskCount: 0,\n      tasks:[],\n      loading: true\n    }\n    this.createTask = this.createTask.bind(this)\n    this.checkboxClicked = this.checkboxClicked.bind(this)\n  }\n  render(){\n    return (\n      <div>\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small><a className=\"nav-link\" href=\"#\"><span id=\"account\"></span></a></small>\n          </li>\n        </ul>\n      </nav>\n      <br></br>\n      <blockquote className=\"blockquote text-center\">\n      <p className=\"mb-0\"> <strong> TODO LIST </strong></p>\n      <footer className=\"blockquote-footer\">Huncho J</footer>\n      </blockquote>\n\n      <div className=\"container-fluid\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex justify-content-center\">\n              {this.state.loading\n                ?  <div id = \"loader\" className = \"text-center\"><p className= \"text-center\"> Loading....</p></div>\n                : <Main\n                  tasks = {this.state.tasks}\n                  createTask = {this.createTask}\n                  checkboxClicked = {this.checkboxClicked}/>\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\reportWebVitals.js",[],"C:\\Users\\jjrab\\Desktop\\projects\\TodoList-dapp\\src\\main.js",["41"],"import React, { Component } from 'react'\r\n\r\nclass Main extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"content\">\r\n        <form onSubmit = {(event) => {\r\n          event.preventDefault()\r\n          this.props.createTask(this.task.value)\r\n        }}>\r\n          <input id = \"newTask\" ref ={(input) => this.task = input} type=\"text\" className= \"form-control\" placeholder =\"Add task...\" required />\r\n          <input type =\"submit\" hidden={true} />\r\n        </form>\r\n        <ul id=\"taskList\" className=\"list-unstyled\">\r\n          { this.props.tasks.map((task, key) => {\r\n            return(\r\n              <div className=\"taskTemplate\" className=\"checkbox\" key={key}>\r\n                <label>\r\n                    <input type=\"checkbox\"\r\n                    name = {task.id}\r\n                    defaultChecked = {task.completed}\r\n                    ref ={(input) => {this.checkbox = input}}\r\n                    onClick={(event) => {\r\n                    this.props.checkboxClicked(this.checkbox.name)}}/>\r\n                  <span className=\"content\">{task.content}</span>\r\n                </label>\r\n              </div>\r\n            )\r\n          })}\r\n        </ul>\r\n        <ul id=\"completedTaskList\" className=\"list-unstyled\">\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":16},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":95,"column":20,"nodeType":"54","endLine":95,"endColumn":53},{"ruleId":"55","severity":1,"message":"56","line":18,"column":45,"nodeType":"57","endLine":18,"endColumn":65},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'TodoList' is defined but never used.","Identifier","unusedVar",["58"],["59"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]